name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run tests
      run: yarn test
      
    - name: Build
      run: yarn build
      
    - name: Create Release Archive
      run: |
        cd dist
        zip -r ../book-portfolio-${{ github.ref_name }}.zip .
        tar -czf ../book-portfolio-${{ github.ref_name }}.tar.gz .
        cd ..
        
    - name: Generate Release Notes
      id: release_notes
      run: |
        if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "type=release" >> $GITHUB_OUTPUT
          echo "prerelease=false" >> $GITHUB_OUTPUT
        else
          echo "type=prerelease" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## üöÄ Book Portfolio ${{ github.ref_name }}
          
          ### üì¶ Assets
          - **book-portfolio-${{ github.ref_name }}.zip** - Production build (ZIP)
          - **book-portfolio-${{ github.ref_name }}.tar.gz** - Production build (TAR.GZ)
          
          ### üåê Live Demo
          Visit the live demo at: https://${{ github.repository_owner }}.github.io/book-portfolio/
          
          ### üìã Changes
          See the [commit history](https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}) for detailed changes.
          
          ---
          Built with ‚ù§Ô∏è using React + TypeScript + Vite
        draft: false
        prerelease: ${{ steps.release_notes.outputs.prerelease }}
        
    - name: Upload ZIP Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./book-portfolio-${{ github.ref_name }}.zip
        asset_name: book-portfolio-${{ github.ref_name }}.zip
        asset_content_type: application/zip
        
    - name: Upload TAR.GZ Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./book-portfolio-${{ github.ref_name }}.tar.gz
        asset_name: book-portfolio-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip